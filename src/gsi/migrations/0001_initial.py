# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-08 14:48
from __future__ import unicode_literals

from django.db import migrations, models
import gsi.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HomeVariables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SAT_TIF_DIR_ROOT', models.CharField(help_text=b'SAT_TIF_DIR_ROOT', max_length=300, verbose_name=b'Satelite Data Top Level')),
                ('RF_DIR_ROOT', models.CharField(help_text=b'RF_DIR_ROOT', max_length=300, verbose_name=b'Top directory of Random Forest Files')),
                ('USER_DATA_DIR_ROOT', models.CharField(help_text=b'USER_DATA_DIR_ROOT', max_length=300, verbose_name=b'Top Level for user data directory')),
                ('MODIS_DIR_ROOT', models.CharField(help_text=b'MODIS_DIR_ROOT', max_length=300, verbose_name=b'Top Level for raw Modis data')),
                ('RF_AUXDATA_DIR', models.CharField(help_text=b'RF_AUXDATA_DIR', max_length=300, verbose_name=b'Top Level for Auxilliary data(SOIL, DEM etc.)')),
                ('SAT_DIF_DIR_ROOT', models.CharField(help_text=b'SAT_DIF_DIR_ROOT', max_length=300, verbose_name=b'Top Level for Satelite TF files')),
            ],
            options={
                'verbose_name': 'Home variables',
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'This will be a short display of the value, i.e. 1KM, 250M', max_length=50)),
                ('value', models.CharField(help_text=b'Value in meters, e.g 1000 for 1KM display name', max_length=20)),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=6)),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VariablesGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('environment_variables', models.TextField()),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='YearGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('years', models.ManyToManyField(related_name='year_groups', to='gsi.Year')),
            ],
            bases=(gsi.models.UnicodeNameMixin, models.Model),
        ),
        migrations.AddField(
            model_name='area',
            name='tiles',
            field=models.ManyToManyField(related_name='areas', to='gsi.Tile'),
        ),
    ]
